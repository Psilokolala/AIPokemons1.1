window.Pokemon = class Pokemon {
    constructor(x, y, species, size = 40) {
        this.x = x;
        this.y = y;
        this.species = species;
        this.name = species;
        this.size = size;
        this.speed = 0.5 + Math.random() * 0.3; // –°–ª—É—á–∞–π–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
        this.originalSpeed = this.speed;
        this.direction = Math.random() * Math.PI * 2;
        this.changeDirectionInterval = 3000 + Math.random() * 4000; // –°–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
        this.lastDirectionChange = Date.now() - Math.random() * 3000; // –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
        this.sprite = new Image();
        this.sprite.src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${this.getPokemonId()}.png`;
        this.sprite.onload = () => {
            this.spriteLoaded = true;
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –±–æ—è
        this.isInFight = false;
        this.mood = 'normal'; // normal, angry
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª–µ—Ç–∞
        this.isFlying = false;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–æ–¥—ã
        this.isWater = false;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–Ω–∞
        this.isSleeping = false;
        this.sleepStartTime = 0;
        this.sleepDuration = 10000; // 10 —Å–µ–∫—É–Ω–¥
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–≤–µ—á–µ–Ω–∏—è
        this.isGlowing = false;
        this.glowStartTime = 0;
        this.glowDuration = 3000; // 3 —Å–µ–∫—É–Ω–¥—ã
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
        this.carriedItem = null;

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
        this.targetX = x + (Math.random() - 0.5) * 100; // –°–ª—É—á–∞–π–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–ª—å
        this.targetY = y + (Math.random() - 0.5) * 100;
        this.moveTimer = 0;
        this.idleTimer = Math.random() * 2000; // –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –¥–≤–∏–∂–µ–Ω–∏—è
        this.isIdle = Math.random() < 0.3; // 30% —à–∞–Ω—Å –Ω–∞—á–∞—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–∫–æ—è
    }

    getPokemonId() {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–º—è –ø–æ–∫–µ–º–æ–Ω–∞ –≤ ID
        const nameToId = {
            'Pikachu ‚ö°Ô∏è': 25,
            'Charizard üî•': 6,
            'Bulbasaur üåø': 1,
            'Squirtle üíß': 7,
            'Mewtwo üß†': 150,
            'Dragonite üêâ': 149,
            'Gyarados üåä': 130,
            'Snorlax üò¥': 143,
            'Eevee ‚ú®': 133,
            'Gengar üëª': 94,
            'Rayquaza üêâ': 384,
            'Lucario ü•ã': 448,
            'Greninja üê∏': 658,
            'Arcanine üî•': 59,
            'Jigglypuff üé§': 39,
            'Machamp üí™': 68,
            'Venusaur üçÉ': 3,
            'Blastoise üí¶': 9,
            'Alakazam üîÆ': 65,
            'Gardevoir üíñ': 282,
            'Tyranitar üèî': 248,
            'Salamence üî•': 373,
            'Zoroark ü¶ä': 571,
            'Sylveon üéÄ': 700,
            'Infernape üî•üêµ': 392,
            'Metagross üõ°': 376,
            'Darkrai üåë': 491,
            'Cyndaquil üî•': 155,
            'Chandelure üïØ': 609,
            'Umbreon üåô': 197
        };
        
        return nameToId[this.species] || 25; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º Pikachu –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }

    update(pokemons, moonStones, biomes) {
        if (this.isSleeping || this.isInFight) {
            return;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∫–æ—è
        if (this.isIdle) {
            this.idleTimer -= 16; // –ü—Ä–∏–º–µ—Ä–Ω–æ 60 FPS
            if (this.idleTimer <= 0) {
                this.isIdle = false;
                this.idleTimer = Math.random() * 2000;
            }
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ—Ä–∞ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        if (Date.now() - this.lastDirectionChange > this.changeDirectionInterval) {
            this.direction = Math.random() * Math.PI * 2;
            this.lastDirectionChange = Date.now();
            this.changeDirectionInterval = 3000 + Math.random() * 4000; // –ù–æ–≤—ã–π —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Ü–µ–ª–µ–≤—É—é —Ç–æ—á–∫—É
            const distance = Math.random() * 100 + 30; // –°–ª—É—á–∞–π–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
            this.targetX = this.x + Math.cos(this.direction) * distance;
            this.targetY = this.y + Math.sin(this.direction) * distance;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
            this.targetX = Math.max(this.size, Math.min(800 - this.size, this.targetX));
            this.targetY = Math.max(this.size, Math.min(600 - this.size, this.targetY));

            // –®–∞–Ω—Å –ø–µ—Ä–µ–π—Ç–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–æ—è
            if (Math.random() < 0.2) { // 20% —à–∞–Ω—Å
                this.isIdle = true;
                return;
            }
        }

        // –ü–ª–∞–≤–Ω–æ –¥–≤–∏–≥–∞–µ–º—Å—è –∫ —Ü–µ–ª–µ–≤–æ–π —Ç–æ—á–∫–µ
        const dx = this.targetX - this.x;
        const dy = this.targetY - this.y;
        const distance = Math.sqrt(dx * dx + dy * dy);

        if (distance > 1) {
            const speed = this.speed * (0.8 + Math.random() * 0.4); // –°–ª—É—á–∞–π–Ω—ã–µ –∫–æ–ª–µ–±–∞–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏
            this.x += (dx / distance) * speed;
            this.y += (dy / distance) * speed;
        } else {
            // –î–æ—Å—Ç–∏–≥–ª–∏ —Ü–µ–ª–∏, –º–æ–∂–µ–º –ø–µ—Ä–µ–π—Ç–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫–æ—è
            if (Math.random() < 0.1) { // 10% —à–∞–Ω—Å
                this.isIdle = true;
                this.idleTimer = Math.random() * 1500 + 500;
            }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
        if (this.x < this.size || this.x > 800 - this.size) {
            this.direction = Math.PI - this.direction;
            this.x = Math.max(this.size, Math.min(800 - this.size, this.x));
            this.targetX = this.x + Math.cos(this.direction) * 50;
        }
        if (this.y < this.size || this.y > 600 - this.size) {
            this.direction = -this.direction;
            this.y = Math.max(this.size, Math.min(600 - this.size, this.y));
            this.targetY = this.y + Math.sin(this.direction) * 50;
        }
    }

    startSleeping() {
        if (!this.isSleeping) {
            this.isSleeping = true;
            this.sleepStartTime = Date.now();
            this.speed = 0;
        }
    }

    wakeUp() {
        if (this.isSleeping) {
            this.isSleeping = false;
            this.speed = this.originalSpeed;
        }
    }

    wakeUpOnClick() {
        if (this.isSleeping) {
            this.wakeUp();
            return true;
        }
        return false;
    }
}; 